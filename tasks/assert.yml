---

- name: assert | Test if bareos_fd_hostname is set correctly
  ansible.builtin.assert:
    that:
      - bareos_fd_hostname is defined
      - bareos_fd_hostname is string
      - bareos_fd_hostname is not none
    quiet: yes

- name: assert | Test if bareos_fd_tls_enable is set correctly
  ansible.builtin.assert:
    that:
      - bareos_fd_tls_enable is defined
      - bareos_fd_tls_enable is boolean
    quiet: yes

- name: assert | Test if bareos_fd_tls_verify_peer is set correctly
  ansible.builtin.assert:
    that:
      - bareos_fd_tls_verify_peer is defined
      - bareos_fd_tls_verify_peer is boolean
    quiet: yes

- name: assert | Test if baeros_fd_heartbeat_interval is set correctly
  ansible.builtin.assert:
    that:
      - baeros_fd_heartbeat_interval is defined
      - baeros_fd_heartbeat_interval is number
    quiet: yes

- name: assert | Test if bareos_fd_directors is set correctly
  ansible.builtin.assert:
    that:
      - bareos_fd_directors is iterable
    quiet: yes
  when:
    - bareos_fd_directors is defined

- name: assert | Test if items in bareos_fd_directors are set correctly when enabled
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.password is defined
      - item.password is string
      - item.password is not none
      - item.monitor is defined
      - item.monitor is boolean
    quiet: yes
  loop: "{{ bareos_fd_directors }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_directors is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if item tls_enable in bareos_fd_directors are set correctly
  ansible.builtin.assert:
    that:
      - item.tls_enable is boolean
    quiet: yes
  loop: "{{ bareos_fd_directors }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_directors is defined
    - item.tls_enable is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if item tls_verify_peer in bareos_fd_directors are set correctly
  ansible.builtin.assert:
    that:
      - item.tls_verify_peer is boolean
    quiet: yes
  loop: "{{ bareos_fd_directors }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_directors is defined
    - item.tls_verify_peer is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if items in bareos_fd_directors are set correctly when not enabled
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.enabled is defined
      - item.enabled is boolean
    quiet: yes
  loop: "{{ bareos_fd_directors }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_directors is defined
    - item.enabled is defined and not item.enabled

- name: assert | Test if bareos_fd_messages is set correctly
  ansible.builtin.assert:
    that:
      - bareos_fd_messages is iterable
    quiet: yes
  when:
    - bareos_fd_messages is defined

- name: assert | Test if items in bareos_fd_messages are set correctly when enabled
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.description is defined
      - item.description is string
      - item.description is not none
    quiet: yes
  loop: "{{ bareos_fd_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_messages is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if item.director in bareos_fd_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.director is mapping
      - item.director.server is defined
      - item.director.server is string
      - item.director.server is not none
      - item.director.messages is defined
      - item.director.messages is iterable
    quiet: yes
  loop: "{{ bareos_fd_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_messages is defined
    - item.director is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if item.append in bareos_fd_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.append is mapping
      - item.append.file is defined
      - item.append.file is string
      - item.append.file is not none
      - item.append.messages is defined
      - item.append.messages is iterable
    quiet: yes
  loop: "{{ bareos_fd_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_messages is defined
    - item.append is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if item.console in bareos_fd_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.console is iterable
    quiet: yes
  loop: "{{ bareos_fd_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_messages is defined
    - item.console is defined
    - item.enabled is not defined or
      (item.enabled is defined and item.enabled)

- name: assert | Test if items in bareos_fd_messages are set correctly when not enabled
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.enabled is defined
      - item.enabled is boolean
    quiet: yes
  loop: "{{ bareos_fd_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_fd_messages is defined
    - item.enabled is defined and not item.enabled
